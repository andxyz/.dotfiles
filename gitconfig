[user]
    name = Andrew Stevens
    email = andxyz.stevens@gmail.com

[core]
    pager = less -FRSX
    editor = subl -n -w
    excludesfile = /Users/andxyz/.gitignore_global
    autocrlf = input
    whitespace = trailing-space,space-before-tab,tab-in-indent

[apply]
    whitespace = warn

[color]
    ui = auto

[push]
	default = simple

[branch]
    autosetupmerge = always
    autosetuprebase = always

# this is messing up cocoapod podspecs
#  [url "ssh://git@github.com/"]
#   insteadOf = https://github.com/

[alias]
    p = pull
    f = fetch --all
    fm = fetch origin master:master
    # andxyz logging
    unstage = reset HEAD --
    l = log --graph --pretty=format:'%Cred[%h]%Creset%Cgreen[%ci]%C(bold blue)[%an]%Creset%C(yellow)%d%Creset %s'
    log0  = log -10 --author-date-order --color -m --stat=180,150 --pretty='format: %Cgreen%h%Creset%Cblue by %an, %cr%Creset  %s%Cred%d%Creset%n'
    log1  = log -10 --author-date-order --color --all --graph --stat=180,150 --pretty='format: %Cgreen%h%Creset%Cblue by %an, %cr%Creset  %s%Cred%d%Creset%n'
    log2 = log --author-date-order --decorate --pretty=oneline --abbrev-commit --all
    log3 = log -p
    log4  = log --author-date-order --color --all --graph --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
    log5 = log --author-date-order -decorate --pretty=oneline --abbrev-commit
    log6  = log -10 --author-date-order --color --all --graph --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
    logpr = log --graph --oneline --decorate --no-merges --topo-order --boundary origin/master...
    show0 = show --pretty="full" --stat
    show1 = show --stat=180,150 --pretty="oneline"
    show2 = show --pretty="full" --name-only
    show3 = show --pretty="oneline" --name-only
    tagsbydate = log --tags --simplify-by-decoration --pretty='format:%ai %d by %an'
    ## git formatting tips
    # http://stackoverflow.com/questions/16286517/how-to-toggle-the-date-format-of-git-log-how-to-display-both-relative-and-abs
    # http://stackoverflow.com/questions/8576503/how-can-i-make-git-log-order-based-on-authors-timestamp

    # andxyz git shortcuts
    ls = ls-files
    # not really used but they are useful to look at
    delete-remote-branch="git push origin --delete"

    # andxyz diff magic
    diffks = difftool --tool=Kaleidoscope
    diffp4 = difftool --tool=p4merge
    mergeks = mergetool --tool=Kaleidoscope
    # https://github.com/scottgonzalez/pretty-diff
    # diffpretty = !$HOME/bin/pretty-diff/pretty-diff.js

    # http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html
    # ctags = !.git/hooks/ctags

    # searching git for stuff
    # http://travisjeffery.com/b/2012/02/search-a-git-repo-like-a-ninja/
    ggrep = grep --break --heading --line-number
	alias = config --get-regexp ^alias\\.

#
# git grep tips
#
# http://travisjeffery.com/b/2012/02/search-a-git-repo-like-a-ninja/
#
[grep]
    lineNumber = true
    extendRegexp = true

#
# perforce p4merge aint so great, just buy http://www.kaleidoscopeapp.com/
#
# perforce p4merge setup as the mergetool
# http://www.perforce.com/product/components/perforce-visual-merge-and-diff-tools
# the gist https://gist.github.com/toolbear/861192
# you must have a ~/bin/p4merge file
#
[mergetool "p4merge"]
    cmd = p4merge "$BASE" "$REMOTE" "$LOCAL" "$MERGED"
    keepTemporaries = false
    trustExitCode = false
    keepBackup = false

[difftool "p4merge"]
    cmd = "p4merge $LOCAL $REMOTE"

#
# Kaleidoscope
#
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[diff]
    tool = Kaleidoscope
    keepBackup = false
    keepTemporaries = false

[merge]
    tool = Kaleidoscope
    keepBackup = false
    keepTemporaries = false
    trustExitCode = false

[mergetool]
    tool = Kaleidoscope
    keepBackup = false
    keepTemporaries = false
    trustExitCode = false
    prompt = false

#
# sourcetree
#
[difftool "sourcetree"]
    cmd = opendiff \"$LOCAL\" \"$REMOTE\"
[mergetool "sourcetree"]
    cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
    trustExitCode = true

#
# ctags are kind of a pain when they run wild
#
# http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html
#[init]
#    templatedir = ~/.git_template

#
# better man pages for git, using the website git-scm.com
#
# Thanks to http://twitter.com/rtomayko/status/199572965434728448
# https://gist.github.com/2601550#
# example:
# `git help -w remote `
#
# The new git-scm.com site includes man pages designed for pleasant viewing in a web browser:
# http://git-scm.com/docs
#
# The commands below can be used to configure git to open these pages when
# using `git help -w <command>' from the command line. Just enter the config
# commands in your shell to modify your ~/.gitconfig file.
[browser "gitscm"]
    cmd = /bin/sh -c 'open http://git-scm.com/docs/$(basename $1 .html)' --
[help]
    browser = gitscm

#
# andxyz secret stuff (github auth tokens etc etc)
#
[include]
    path            = ~/.gitconfig-private
[credential]
	helper = store
