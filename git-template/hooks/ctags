#!/usr/bin/env bash

# set -x

# man ctags
# ctags --list-languages
# ctags-exuberant http://docs.ctags.io/en/latest/news.html#new-options

## explanation
# So I have a shell script called `/Users/andxyz/.git-template/hooks/ctags`
#
# ~/.vimrc you would have
# `set tags+=./.git/tags;`
#
# I have the following inside "/Users/andxyz/Library/Application Support/Sublime Text 3/Packages/User/CTags.sublime-settings"
#
# {
#   "command" : "/usr/local/bin/ctags",
#   "opts" : [],
#   "debug": false,
#   "tag_file" : ".git/tags"
# }
#
# I have the following inside "/Users/andxyz/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap"
#
# // ctags
# { "keys": ["shift+ctrl+up"], "command": "jump_prev" },
# { "keys": ["shift+ctrl+down"], "command": "navigate_to_definition" },

# get the ruby stdlib basepath base
CTAGS_GEM_HOME=`rbenv exec gem environment gemdir`
CTAGS_RBENV_PREFIX=`rbenv prefix`
CTAGS_RUBY_BASENAME=`basename "${CTAGS_GEM_HOME}"`
CTAGS_RUBY_STDLIB="${CTAGS_RBENV_PREFIX}/lib/ruby/${CTAGS_RUBY_BASENAME}"

CTAGS_GIT_DIRECTORY="$(/usr/local/bin/git rev-parse --git-dir)"
trap 'rm -f "$CTAGS_GIT_DIRECTORY/$$.tags"' EXIT

# get all the Gemfile paths from within subprojects too
function ctags_ruby_lib_paths {
  for f in $(find "$CTAGS_GIT_DIRECTORY/.." -name Gemfile); do
    (cd "$(gdirname "${f}")" && (rbenv exec bundle check || rbenv exec bundle install) >/dev/null 2>&1 && rbenv exec bundle list --paths);
  done | gsort -u
}

# get all the ruby files from within subprojects too
function ctags_subproject_rubyfiles {
  for f in $(find "$CTAGS_GIT_DIRECTORY/.." -name Gemfile); do
    (cd "$(gdirname "${f}")" && git ls-files '*.rb' | gxargs -L 128 greadlink -f);
  done | gsort -u
}

# get all the ruby files from git (using absolute paths)
function ctags_project_paths {
  git ls-files '*.rb' | gxargs -L 128 greadlink -f |
  gsort -u
}

# set -x

/usr/local/bin/ctags --sort=yes -R --tag-relative=always \
--languages=+ruby,-html,-javascript,-sql \
--exclude=.git \
--exclude=log \
--exclude=vendor \
--exclude=bundle \
--exclude=types.conf \
--exclude='*.js' \
-f"${CTAGS_GIT_DIRECTORY}/$$.tags" $(ctags_project_paths) $(ctags_subproject_rubyfiles) $(ctags_ruby_lib_paths) "${CTAGS_RUBY_STDLIB}" |
> /dev/null 2>&1 #silence output

if [[ $? -ne 0 ]]; then
  exit 1
fi

cp "${CTAGS_GIT_DIRECTORY}/$$.tags" "${CTAGS_GIT_DIRECTORY}/tags"
mv "${CTAGS_GIT_DIRECTORY}/$$.tags" "${CTAGS_GIT_DIRECTORY}/tags_sorted_by_file"

# We succeeded, reset trap and exit normally
trap - EXIT
exit 0
