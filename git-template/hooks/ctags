#!/usr/bin/env bash

# set -x

# man ctags
# ctags --list-languages
# ctags-exuberant http://docs.ctags.io/en/latest/news.html#new-options

## explanation
# So I have a shell script called `/Users/andxyz/.git-template/hooks/ctags`
#
# ~/.vimrc you would have
# `set tags+=./.git/tags;`
#
# I have the following inside "/Users/andxyz/Library/Application Support/Sublime Text 3/Packages/User/CTags.sublime-settings"
#
# {
#   "command" : "/usr/local/bin/ctags",
#   "opts" : [],
#   "debug": false,
#   "tag_file" : ".git/tags"
# }
#
# I have the following inside "/Users/andxyz/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap"
#
# // ctags
# { "keys": ["shift+ctrl+up"], "command": "jump_prev" },
# { "keys": ["shift+ctrl+down"], "command": "navigate_to_definition" },

# get the ruby stdlib basepath base
CTAGS_DEBUG='true' # set to "true" to debug
CTAGS_GEM_HOME=`rbenv exec gem environment gemdir`
CTAGS_RBENV_PREFIX=`rbenv prefix`
CTAGS_RUBY_BASENAME=`basename "${CTAGS_GEM_HOME}"`
CTAGS_RUBY_STDLIB="${CTAGS_RBENV_PREFIX}/lib/ruby/${CTAGS_RUBY_BASENAME}"
CTAGS_GIT_DIRECTORY="$(/usr/local/bin/git rev-parse --git-dir)"
TMPFILE=$(gmktemp -t tmp_ctags_files_XXXXX.txt)

if [[ -n $CTAGS_DEBUG ]]; then
  echo -e "CTAGS_GEM_HOME:\n${CTAGS_GEM_HOME}"
  echo -e "CTAGS_RBENV_PREFIX:\n${CTAGS_RBENV_PREFIX}"
  echo -e "CTAGS_RUBY_BASENAME:\n${CTAGS_RUBY_BASENAME}"
  echo -e "CTAGS_RUBY_STDLIB:\n${CTAGS_RUBY_STDLIB}"
  echo -e "CTAGS_GIT_DIRECTORY:\n${CTAGS_GIT_DIRECTORY}"
  echo -e "TMPFILE:\n${TMPFILE}"
fi

# get all the Gemfile paths from within subprojects too
function ctags_ruby_lib_paths {
  for f in $(cd "${CTAGS_GIT_DIRECTORY}/.."; find '.' -not -path './\.*' -name Gemfile); do
    (cd "$(gdirname "${f}")" && (rbenv exec bundle check || rbenv exec bundle install) >/dev/null 2>&1 && find $(rbenv exec bundle list --paths) -iname '*.rb');
  done | gsort -u
}

# get all the ruby files and subprojects ruby files too
function ctags_project_and_subproject_rubyfiles {
  for f in $(cd "${CTAGS_GIT_DIRECTORY}/.."; find '.' -not -path './\.*' -name Gemfile); do
    (cd "$(gdirname "${f}")" && git ls-files '*.rb' | gxargs -L 128 greadlink -f);
  done | gsort -u
}

trap 'rm -f "${CTAGS_GIT_DIRECTORY}/$$.tags" && rm -f "${TMPFILE}' EXIT

ctags_project_and_subproject_rubyfiles >> ${TMPFILE}
ctags_ruby_lib_paths >> ${TMPFILE}
echo "${CTAGS_RUBY_STDLIB}" >> ${TMPFILE}

if [[ -n $CTAGS_DEBUG ]]; then
  echo "Total project and subprojects ruby files: $(ctags_project_and_subproject_rubyfiles | wc -l)"
  echo "Total ruby files from gems: $(ctags_ruby_lib_paths | wc -l)"
  echo "Also traverses Ruby stdlib dir: ${CTAGS_RUBY_STDLIB}"
  echo -e "Contents of ${TMPFILE}:"
  cat "${TMPFILE}"
fi

/usr/local/bin/ctags --sort=yes -R --tag-relative=always \
--languages='+ruby,-html,-javascript,-sql,-c,-c++,-css' \
--exclude='Makefile' \
--exclude='*.c' \
--exclude='*.h' \
--exclude='*.in' \
--exclude='*.cpp' \
--exclude='*.hpp' \
--exclude='*.hh' \
--exclude='*.rst' \
--exclude='*.md' \
--exclude='README' \
--exclude='*.js' \
--exclude='*.json' \
--exclude='*.html' \
--exclude='*.xml' \
--exclude='*.svg' \
--exclude='*.css' \
--exclude='.git' \
--exclude='bundle' \
--exclude='log' \
--exclude='types.conf' \
--exclude='vendor' \
--exclude='node_modules' \
-f"${CTAGS_GIT_DIRECTORY}/$$.tags" -L ${TMPFILE} |
> /dev/null 2>&1 #silence output

# if the last command failed, then we "exit status 1", :sadcowboy:
if [[ $? -ne 0 ]]; then
  exit 1
fi

# We succeeded, move the files to names we want
mv "${CTAGS_GIT_DIRECTORY}/$$.tags" "${CTAGS_GIT_DIRECTORY}/tags_sorted_by_file"
ln -s "${CTAGS_GIT_DIRECTORY}/tags_sorted_by_file" "${CTAGS_GIT_DIRECTORY}/tags"

# We succeeded, run the trap and exit normally
trap - EXIT
exit 0
