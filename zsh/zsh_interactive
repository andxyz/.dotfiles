#!/usr/bin/env zsh

setopt INTERACTIVECOMMENTS # allow bash style comments

# Disabling System-Wide compinit Call (Ubuntu)
# Skip the not really helping Ubuntu global compinit
skip_global_compinit=1

# http://superuser.com/questions/71857/change-the-output-format-of-zshs-time
disable -r time       # disable shell reserved word
alias time='time -p ' # -p for POSIX output

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "${HOME}/.p10k.zsh" ]] || source "${HOME}/.p10k.zsh"

eval "$(fzf --zsh)"
## zplug dance see https://github.com/zplug/zplug
if [[ $(uname -s) == Darwin ]]
then
    export -- ZPLUG_HOME="/usr/local/opt/zplug"
else
    # Linux
    export -- ZPLUG_HOME="${HOME}/.zplug/base/"
fi
source $ZPLUG_HOME/init.zsh
## z plugs
# (If the defer tag is given 2 or above, run after compinit command)
zplug "rupa/z", use:z.sh
zplug "zsh-users/zsh-syntax-highlighting"
zplug "romkatv/powerlevel10k", as:theme, depth:1
# zplug "dracula/zsh", as:theme
# brew install 'zsh-syntax-highlighting'
zplug "zsh-users/zsh-history-substring-search", \
    from:github, \
    as:plugin
zplug "changyuheng/fz", defer:1
export -- FZ_SUBDIR_CMD=fz_zz
zplug "jhawthorn/fzy", defer:1, as:command, \
  rename-to:fzy, hook-build:"make && sudo make install"
# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
        zplug update
    fi
fi

source "${ZPLGM[HOME_DIR]}/bin/zinit.zsh"

# Ensure that zinit is compiled
if [[ ! -f ${ZPLGM[BIN_DIR]}/zinit.zsh.zwc ]]; then
    zinit self-update > /dev/null 2>&1
fi

#
## Plugin setup
##
zinit cdclear -q #
## powerlevel10k prompt
# zinit ice depth"1" # git clone depth
# zinit light "romkatv/powerlevel10k"
#
zinit ice depth"1" # git clone depth
# remember to install Dejavu sans nerd font mono into your shell
# see https://www.nerdfonts.com/font-downloads
zinit light "spaceship-prompt/spaceship-prompt"

zinit ice depth"1"
zinit light "spaceship-prompt/spaceship-vi-mode"
# z
zinit ice lucid wait"1"
zinit light "rupa/z"
# fz
zinit ice lucid wait"1"
zinit light "changyuheng/fz"
# fzy
zinit ice wait"1" lucid as"program" make"!PREFIX=${ZPFX} install" \
    atclone"cp contrib/fzy-* ${ZPFX}/bin/" \
    pick"${ZPFX}/bin/fzy*"
zinit light "jhawthorn/fzy"
# fast-syntax-highlighting
zinit ice wait"1" lucid
zinit light "zdharma-continuum/fast-syntax-highlighting"
# history-search-multi-word
zinit ice wait"1" lucid
zinit light "zdharma/history-search-multi-word"
# fzf
zinit ice wait"2" lucid from"gh-r" as"program"
zinit light "junegunn/fzf"

# On OSX, you might need to install coreutils from homebrew and use the
# g-prefix ‚Äì gsed, gdircolors
zinit ice wait"0" lucid \
    atclone"local PFX=${${(M)OSTYPE:#*darwin*}:+g}
            git reset --hard; \${PFX}sed -i \
            '/DIR/c\DIR                   38;5;63;1' LS_COLORS; \
            \${PFX}dircolors -b LS_COLORS > c.zsh" \
            atpull'%atclone' pick"c.zsh" nocompile'!' \
            atload'zstyle ":completion:*" list-colors ‚Äú${(s.:.)LS_COLORS}‚Äù'
zinit light "trapd00r/LS_COLORS"
source ~/_zinit/plugins/trapd00r---LS_COLORS/lscolors.sh

zinit for atload"zicompinit; zicdreplay" \
    blockf \
    lucid \
    wait \
  "zsh-users/zsh-completions"

# Install plugins if there are plugins that have not been installed
if [[ -d ${ZPLGM[HOME_DIR]}/bin ]]; then
  # Only approx. 5% of the time, execute the following command
  ((RANDOM/32768. < 0.05)) && zinit update --all --parallel # --quiet
fi

# zinit zstatus

# fzf completion dance
eval "$(fzf --zsh)"
# fzf
if type fzf &> /dev/null && type rg &> /dev/null; then
  export -- FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*" --glob "!vendor/*"'
  export -- FZF_CTRL_T_COMMAND='rg --files --hidden --follow --glob "!.git/*" --glob "!vendor/*"'
  # Preview file content using bat (https://github.com/sharkdp/bat)
  export -- FZF_CTRL_T_OPTS="
    --walker-skip .git,node_modules,target
    --preview 'bat -n --color=always {}'
    --bind 'ctrl-/:change-preview-window(down|hidden|)'"
  export -- FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# brew info zsh-completions
#
# ls /usr/local/share/zsh-completions
# chmod -R go-w '/usr/local/share/zsh'
# rm -f ~/.zcompdump; compinit

if type brew &>/dev/null; then
  export -- FPATH="$(brew --prefix)/share/zsh-completions:$FPATH"
fi

## personal zsh functions
export -- FPATH="${HOME}/.zsh/functions:${FPATH}"
autoload -U ~/.zsh/functions/*(:t)
autoload -Uz compinit
compinit

## spaceship-prompt prompt
export -- SPACESHIP_BATTERY_SHOW=false
export -- SPACESHIP_TIME_SHOW=true
export -- SPACESHIP_TIME_FORMAT="%D{%I:%M %p}"
export -- SPACESHIP_TIME_COLOR=cyan
export -- SPACESHIP_RPROMPT_ORDER=(
  time
)
SPACESHIP_PROMPT_ORDER=("${(@)SPACESHIP_PROMPT_ORDER:|SPACESHIP_RPROMPT_ORDER}")
typeset -p SPACESHIP_PROMPT_ORDER 2>&1 > /dev/null
export -- SPACESHIP_PROMPT_ORDER

# carapace-bin completions dance https://github.com/carapace-sh/carapace-bin?tab=readme-ov-file#getting-started
source <(carapace _carapace)

# compaudit
#
# sudo chmod -R g-w /usr/local/share/zsh/site-functions
# sudo chmod -R g-w /usr/local/share/zsh
# sudo chmod -R g-w /usr/local/share/
#
#
#
zstyle ':completion:*' menu select # Style of completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' # matches case insensitive for lowercase
zstyle ':completion:*' insert-tab pending # pasting with tabs doesn't perform completion


## fancy git prompt on my local machine using a zsh function
# if [[ -n $SSH_CONNECTION ]]; then
#   setopt PROMPT_SUBST; export -- PS1=$'%m:%3~$(__git_ps1 " (%s)")\n$ '
# else
#   setopt PROMPT_SUBST; export -- PS1=$'%3~$(__git_ps1 " (%s)")\n$ '
# fi

## force some ENV configs
setopt NO_BEEP
setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

## shell specific history
export -- HISTFILE=$HOME/.zsh_history

setopt APPEND_HISTORY # adds history
setopt EXTENDED_HISTORY # add timestamps to history
setopt INC_APPEND_HISTORY # adds history incrementally
setopt SHARE_HISTORY # share history between sessions ???
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

## bind some key fixes for keyboards

zle -N newtab

bindkey -e
bindkey '^R' history-incremental-pattern-search-backward

## see http://superuser.com/questions/357355/how-can-i-get-controlleft-arrow-to-go-back-one-word-in-iterm2

## ctrl-left ctrl-right
bindkey "\e[1;5C" forward-word
bindkey "\e[1;5D" backward-word

## alt-left alt-right
bindkey '^[[1;9C' forward-word
bindkey '^[[1;9D' backward-word

# see http://stackoverflow.com/questions/890620/unable-to-have-bash-like-c-x-e-in-zsh
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# bindkey '^[^[[D' backward-word
# bindkey '^[^[[C' forward-word
# bindkey '^[[5D' beginning-of-line
# bindkey '^[[5C' end-of-line
# bindkey '^[[3~' delete-char
# bindkey '^[^N' newtab
# bindkey '^?' backward-delete-char

# Colorize man pages, yoink! https://github.com/Nitrodist/dotfiles/commit/d8f19be5c5ebcd5767eb91a776b5ce23f73a19ab
man() {
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    command man "$@"
}

# for more info on unset FPATH https://stackoverflow.com/a/71866174/684222
alias rezsh='unset FPATH; exec zsh -il' # see

##
# Disable for now till I figure out https://apple.stackexchange.com/questions/395341/iterm2-cmdclick-tries-to-download-url-as-it-is-a-remote-file
##
# pull in iterm2 shell integrations
# if [[ -e "${HOME}/.iterm2_shell_integration.zsh" ]]; then
#   source "${HOME}/.iterm2_shell_integration.zsh"
# fi

# for interactive to have access to languages
# source_golang110_path
# source_node_env # This takes 5+ seconds for each new shell instance üëÄ
source_ruby_env
source_haskell_env
