#!/usr/bin/env bash

## andxyz path stuff
export -- PATH="/usr/local/opt/coreutils/bin:$PATH" # use g prefixed names for coreutils
export -- PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH" # use non g prefixed names for coreutils see "brew info coreutils"
export -- PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH" # brew info findutils
export -- PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
export -- PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
export -- PATH="$HOME/bin:/usr/local/sbin:/usr/local/bin:$PATH"
## andxyz manpath stuff
export -- MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH" # brew info coreutils
export -- MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH" # brew info findutils
export -- MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
export -- MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:$MANPATH"
export -- MANPATH="/usr/local/share/man:$MANPATH"

### language setup stuff

# android sdk magic
export -- STUDIO_JDK=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/
test -d "/Applications/android-sdk-macosx/" &&
export -- ANDROID_HOME=/Applications/android-sdk-macosx/
test -d "/Applications/android-sdk-macosx/platform-tools" &&
export -- PATH="$PATH:/Applications/android-sdk-macosx/platform-tools"
test -d "/Applications/android-sdk-macosx/tools" &&
export -- PATH="$PATH:/Applications/android-sdk-macosx/tools"

function source_golang_env_generic() {
  # golang https://golang.org/doc/install or `brew install go`
  export -- GOPATH=$HOME/code/gowork
  export -- PATH=${PATH}:${GOPATH}/bin
  ## show what is installed in gowork folder
  ## tree -L 3 $HOME/code/gowork
  ## Note: GOROOT must be set only when installing to a custom location.
  #export GOROOT=$HOME/go
  #export PATH=$PATH:$GOROOT/bin
}

function source_golang17_path() {
  export -- PATH="/usr/local/opt/go@1.7/bin:$PATH"
}

# slowing me down
function source_golang17_env() {
  source_golang_env_generic
  source_golang17_path
}

function source_golang18_path() {
  export -- PATH="/usr/local/opt/go@1.8/bin:$PATH"
}

# slowing me down
function source_golang18_env() {
  source_golang_env_generic
  source_golang18_path
}

## haskell uses cabal and stack
# https://github.com/andxyz/.dotfiles/blob/master/languages/haskell.sh
test -d "$HOME/.cabal/bin" &&
export -- PATH="$HOME/.cabal/bin:$PATH"

## nodejs - creationix node version management (nvm)
## add local npm packages to path
export -- PATH="./node_modules/.bin:$PATH"
# slowing me down
function source_node_env() {
  source $HOME/.nvm/nvm.sh
}
# example nvm commands (because I always forget)
# nvm ls-remote
# nvm install v4.1.0
# nvm alias default v4.1.0
# nvm use v4.1.0
#
# export some NODE vars
# export -- NODE_PATH="$NVM_PATH"
# export -- NODE_BIN="$NVM_BIN"
#

# java stuff http://www.jenv.be/
# slowing me down
function source_java_env() {
  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
  # export _JAVA_AWT_WM_NONREPARENTING=1
  # export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dsun.java2d.xrender=true -Dswing.aatext=true'
  eval "$(jenv init -)"
}

## java sdkman http://sdkman.io/
# this stupid thing calls curl all the time
#export SDKMAN_DIR="/Users/andxyz/.sdkman"
#test -s "/Users/andxyz/.sdkman/bin/sdkman-init.sh" &&
#source "/Users/andxyz/.sdkman/bin/sdkman-init.sh"

# ocaml OPAM configuration
# slowing me down
function source_ocaml_env() {
  source $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
}

## perl perlbrew stuff
# slowing me down
function source_perl_env() {
  ## see https://perlbrew.pl/
  # ls ~/perl5/
  export -- PERL_LOCAL_LIB_ROOT="/Users/andxyz/perl5:$PERL_LOCAL_LIB_ROOT";
  export -- PERL_MB_OPT="--install_base "/Users/andxyz/perl5"";
  export -- PERL_MM_OPT="INSTALL_BASE=/Users/andxyz/perl5";
  export -- PERL5LIB="/Users/andxyz/perl5/lib/perl5:$PERL5LIB";
  export -- PATH="/Users/andxyz/perl5/bin:/Users/andxyz/perl5/perlbrew/bin:$PATH";
  source ~/perl5/perlbrew/etc/bashrc
}

## php stuff
# brew lookups slowing me down
source_php_env() {
  PHP_54_PREFIX=$(brew --prefix homebrew/php/php54)
  test -f "$PHP_54_PREFIX/bin/php" &&
  export -- PATH="$PHP_54_PREFIX/bin:$PATH"

  PHP_55_PREFIX=$(brew --prefix homebrew/php/php55)
  test -f "$PHP_55_PREFIX/bin/php" &&
  export -- PATH="$PHP_55_PREFIX/bin:$PATH"

  PHP_56_PREFIX=$(brew --prefix homebrew/php/php56)
  test -f "$PHP_56_PREFIX/bin/php" &&
  export -- PATH="$PHP_56_PREFIX/bin:$PATH"
}

## python path stuff
# brew info python
source_python27_env() {
  export -- PATH="/usr/local/opt/python/libexec/bin:$PATH"
  # They will install into the site-package directory
  #   /usr/local/lib/python2.7/site-packages
  export -- PYTHONPATH=`brew --prefix`/lib/python2.7/site-packages:$PYTHONPATH

  ## python anaconda os-agnostic, system-level binary package manager and ecosystem
  ## see http://conda.pydata.org
  test -d "$HOME/anaconda3/bin" &&
  export PATH="$PATH:$HOME/anaconda3/bin"
}

source_mysql55_build_env() {
  export PATH="/usr/local/opt/mysql@5.5/bin:$PATH"
  # mysql_config
  # pip install --no-binary MySQL-python MySQL-python
}

## ruby rbenv stuff https://github.com/sstephenson/rbenv#readme
## see https://github.com/andxyz/.dotfiles/raw/master/languages/ruby.sh
## note currently I use a "be=bundle exec" alias
# I always seem to use ruby so we live with it
test -d $HOME/.rbenv/bin &&
export -- PATH="$HOME/.rbenv/bin:$PATH" &&
eval "$(rbenv init -)"

## rustup rust cargo
# rustup --help
# slowing me down
function source_rust_env() {
  source $HOME/.cargo/env
}

# taytayswifty
# slowing me down
function source_swift_env() {
  export SWIFTENV_ROOT="$HOME/.swiftenv"
  export PATH="$SWIFTENV_ROOT/bin:$PATH"
  eval "$(swiftenv init -)"
}
